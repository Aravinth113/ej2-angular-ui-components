{"version":3,"file":"ej2-angular-splitbuttons.umd.min.js","sources":["~/@syncfusion/ej2-angular-splitbuttons/src/drop-down-button/items.directive.ts","~/@syncfusion/ej2-angular-splitbuttons/src/drop-down-button/dropdownbutton.component.ts","~/@syncfusion/ej2-angular-splitbuttons/src/drop-down-button/dropdownbutton.module.ts","~/@syncfusion/ej2-angular-splitbuttons/src/drop-down-button/dropdownbutton-all.module.ts","~/@syncfusion/ej2-angular-splitbuttons/src/split-button/items.directive.ts","~/@syncfusion/ej2-angular-splitbuttons/src/split-button/splitbutton.component.ts","~/@syncfusion/ej2-angular-splitbuttons/src/split-button/splitbutton.module.ts","~/@syncfusion/ej2-angular-splitbuttons/src/split-button/splitbutton-all.module.ts","~/@syncfusion/ej2-angular-splitbuttons/src/progress-button/progressbutton.component.ts","~/@syncfusion/ej2-angular-splitbuttons/src/progress-button/progressbutton.module.ts","~/@syncfusion/ej2-angular-splitbuttons/src/progress-button/progressbutton-all.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['iconCss', 'id', 'separator', 'text', 'url'];\nlet /** @type {?} */ outputs: string[] = [];\nexport class DropDownButtonItemDirective extends ComplexBase<DropDownButtonItemDirective> {\n/**\n * Defines class/multiple classes separated by a space for the item that is used to include an icon. \n * Action item can include font icon and sprite image.\n * \\@default ''\n */\npublic iconCss: any;\n/**\n * Specifies the id for item.\n * \\@default ''\n */\npublic id: any;\n/**\n * Specifies separator between the items. Separator are horizontal lines used to group action items.\n * \\@default false\n */\npublic separator: any;\n/**\n * Specifies text for item.\n * \\@default ''\n */\npublic text: any;\n/**\n * Specifies url for item that creates the anchor link to navigate to the url provided.\n * \\@default ''\n */\npublic url: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-dropdownbuttonitems>e-dropdownbuttonitem',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction DropDownButtonItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropDownButtonItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropDownButtonItemDirective.ctorParameters;\n/**\n * Defines class/multiple classes separated by a space for the item that is used to include an icon. \n * Action item can include font icon and sprite image.\n * \\@default ''\n * @type {?}\n */\nDropDownButtonItemDirective.prototype.iconCss;\n/**\n * Specifies the id for item.\n * \\@default ''\n * @type {?}\n */\nDropDownButtonItemDirective.prototype.id;\n/**\n * Specifies separator between the items. Separator are horizontal lines used to group action items.\n * \\@default false\n * @type {?}\n */\nDropDownButtonItemDirective.prototype.separator;\n/**\n * Specifies text for item.\n * \\@default ''\n * @type {?}\n */\nDropDownButtonItemDirective.prototype.text;\n/**\n * Specifies url for item that creates the anchor link to navigate to the url provided.\n * \\@default ''\n * @type {?}\n */\nDropDownButtonItemDirective.prototype.url;\n/** @type {?} */\nDropDownButtonItemDirective.prototype.viewContainerRef;\n}\n\n/**\n * DropDownButtonItem Array Directive\n */\nexport class DropDownButtonItemsDirective extends ArrayBase<DropDownButtonItemsDirective> {\nconstructor() {\n        super('items');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-dropdownbutton>e-dropdownbuttonitems',\n    queries: {\n        children: new ContentChildren(DropDownButtonItemDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DropDownButtonItemsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropDownButtonItemsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropDownButtonItemsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, Renderer2, Injector, ChangeDetectionStrategy, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, ComponentMixins, IComponentBase, applyMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\n\nimport { DropDownButtonItemsDirective } from './items.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['content','cssClass','disabled','enableHtmlSanitizer','enablePersistence','enableRtl','iconCss','iconPosition','items','locale','target'];\nexport const /** @type {?} */ outputs: string[] = ['beforeClose','beforeItemRender','beforeOpen','close','created','open','select'];\nexport const /** @type {?} */ twoWays: string[] = [];\n/**\n * Represents the Angular DropDownButton Component.\n * ```html\n * <button ejs-dropdownbutton>DropDownButton</button>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class DropDownButtonComponent extends DropDownButton implements IComponentBase {\npublic childItems: any;\npublic tags: string[] = ['items'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: '[ejs-dropdownbutton]',\n    inputs: inputs,\n    outputs: outputs,\n    template: `<ng-content ></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childItems: new ContentChild(DropDownButtonItemsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction DropDownButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDropDownButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropDownButtonComponent.ctorParameters;\n/** @type {?} */\nDropDownButtonComponent.prototype.childItems;\n/** @type {?} */\nDropDownButtonComponent.prototype.tags;\n/** @type {?} */\nDropDownButtonComponent.prototype.registerEvents;\n/** @type {?} */\nDropDownButtonComponent.prototype.addTwoWay;\n/** @type {?} */\nDropDownButtonComponent.prototype.ngEle;\n/** @type {?} */\nDropDownButtonComponent.prototype.srenderer;\n/** @type {?} */\nDropDownButtonComponent.prototype.viewContainerRef;\n/** @type {?} */\nDropDownButtonComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropDownButtonItemDirective, DropDownButtonItemsDirective } from './items.directive';\nimport { DropDownButtonComponent } from './dropdownbutton.component';\n/**\n * NgModule definition for the DropDownButton component.\n */\nexport class DropDownButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        DropDownButtonComponent,\n        DropDownButtonItemDirective,\n        DropDownButtonItemsDirective\n    ],\n    exports: [\n        DropDownButtonComponent,\n        DropDownButtonItemDirective,\n        DropDownButtonItemsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DropDownButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDropDownButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropDownButtonModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropDownButtonItemDirective, DropDownButtonItemsDirective } from './items.directive';\nimport { DropDownButtonComponent } from './dropdownbutton.component';\nimport { DropDownButtonModule } from './dropdownbutton.module';\n/**\n * NgModule definition for the DropDownButton component with providers.\n */\nexport class DropDownButtonAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, DropDownButtonModule],\n    exports: [\n        DropDownButtonModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DropDownButtonAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDropDownButtonAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropDownButtonAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['iconCss', 'id', 'separator', 'text', 'url'];\nlet /** @type {?} */ outputs: string[] = [];\nexport class SplitButtonItemDirective extends ComplexBase<SplitButtonItemDirective> {\n/**\n * Defines class/multiple classes separated by a space for the item that is used to include an icon. \n * Action item can include font icon and sprite image.\n * \\@default ''\n */\npublic iconCss: any;\n/**\n * Specifies the id for item.\n * \\@default ''\n */\npublic id: any;\n/**\n * Specifies separator between the items. Separator are horizontal lines used to group action items.\n * \\@default false\n */\npublic separator: any;\n/**\n * Specifies text for item.\n * \\@default ''\n */\npublic text: any;\n/**\n * Specifies url for item that creates the anchor link to navigate to the url provided.\n * \\@default ''\n */\npublic url: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-splitbuttonitems>e-splitbuttonitem',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction SplitButtonItemDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitButtonItemDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSplitButtonItemDirective.ctorParameters;\n/**\n * Defines class/multiple classes separated by a space for the item that is used to include an icon. \n * Action item can include font icon and sprite image.\n * \\@default ''\n * @type {?}\n */\nSplitButtonItemDirective.prototype.iconCss;\n/**\n * Specifies the id for item.\n * \\@default ''\n * @type {?}\n */\nSplitButtonItemDirective.prototype.id;\n/**\n * Specifies separator between the items. Separator are horizontal lines used to group action items.\n * \\@default false\n * @type {?}\n */\nSplitButtonItemDirective.prototype.separator;\n/**\n * Specifies text for item.\n * \\@default ''\n * @type {?}\n */\nSplitButtonItemDirective.prototype.text;\n/**\n * Specifies url for item that creates the anchor link to navigate to the url provided.\n * \\@default ''\n * @type {?}\n */\nSplitButtonItemDirective.prototype.url;\n/** @type {?} */\nSplitButtonItemDirective.prototype.viewContainerRef;\n}\n\n/**\n * SplitButtonItem Array Directive\n */\nexport class SplitButtonItemsDirective extends ArrayBase<SplitButtonItemsDirective> {\nconstructor() {\n        super('items');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ejs-splitbutton>e-splitbuttonitems',\n    queries: {\n        children: new ContentChildren(SplitButtonItemDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SplitButtonItemsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitButtonItemsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSplitButtonItemsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, Renderer2, Injector, ChangeDetectionStrategy, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, ComponentMixins, IComponentBase, applyMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { SplitButton } from '@syncfusion/ej2-splitbuttons';\n\nimport { SplitButtonItemsDirective } from './items.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['content','cssClass','disabled','enableHtmlSanitizer','enablePersistence','enableRtl','iconCss','iconPosition','items','locale','target'];\nexport const /** @type {?} */ outputs: string[] = ['beforeClose','beforeItemRender','beforeOpen','click','close','created','open','select'];\nexport const /** @type {?} */ twoWays: string[] = [];\n/**\n * Represents the Angular SplitButton Component.\n * ```html\n * <ejs-splitbutton content='Split Button'></ejs-splitbutton>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class SplitButtonComponent extends SplitButton implements IComponentBase {\npublic childItems: any;\npublic tags: string[] = ['items'];\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-splitbutton',\n    inputs: inputs,\n    outputs: outputs,\n    template: `<ng-content ></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childItems: new ContentChild(SplitButtonItemsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction SplitButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSplitButtonComponent.ctorParameters;\n/** @type {?} */\nSplitButtonComponent.prototype.childItems;\n/** @type {?} */\nSplitButtonComponent.prototype.tags;\n/** @type {?} */\nSplitButtonComponent.prototype.registerEvents;\n/** @type {?} */\nSplitButtonComponent.prototype.addTwoWay;\n/** @type {?} */\nSplitButtonComponent.prototype.ngEle;\n/** @type {?} */\nSplitButtonComponent.prototype.srenderer;\n/** @type {?} */\nSplitButtonComponent.prototype.viewContainerRef;\n/** @type {?} */\nSplitButtonComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SplitButtonItemDirective, SplitButtonItemsDirective } from './items.directive';\nimport { SplitButtonComponent } from './splitbutton.component';\n/**\n * NgModule definition for the SplitButton component.\n */\nexport class SplitButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        SplitButtonComponent,\n        SplitButtonItemDirective,\n        SplitButtonItemsDirective\n    ],\n    exports: [\n        SplitButtonComponent,\n        SplitButtonItemDirective,\n        SplitButtonItemsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SplitButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSplitButtonModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SplitButtonItemDirective, SplitButtonItemsDirective } from './items.directive';\nimport { SplitButtonComponent } from './splitbutton.component';\nimport { SplitButtonModule } from './splitbutton.module';\n/**\n * NgModule definition for the SplitButton component with providers.\n */\nexport class SplitButtonAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, SplitButtonModule],\n    exports: [\n        SplitButtonModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SplitButtonAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitButtonAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSplitButtonAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, Renderer2, Injector, ChangeDetectionStrategy, ValueProvider } from '@angular/core';\nimport { ComponentBase, ComponentMixins, IComponentBase, applyMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { ProgressButton } from '@syncfusion/ej2-splitbuttons';\n\n\n\nexport const /** @type {?} */ inputs: string[] = ['animationSettings','content','cssClass','disabled','duration','enableHtmlSanitizer','enableProgress','iconCss','iconPosition','isPrimary','isToggle','spinSettings'];\nexport const /** @type {?} */ outputs: string[] = ['begin','created','end','fail','progress'];\nexport const /** @type {?} */ twoWays: string[] = [];\n/**\n * Represents the Angular ProgressButton Component.\n * ```html\n * <button ejs-progressbutton content='Progress Button'></button>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class ProgressButtonComponent extends ProgressButton implements IComponentBase {\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: '[ejs-progressbutton]',\n    inputs: inputs,\n    outputs: outputs,\n    template: `<ng-content ></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\n}\n\nfunction ProgressButtonComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressButtonComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressButtonComponent.ctorParameters;\n/** @type {?} */\nProgressButtonComponent.prototype.registerEvents;\n/** @type {?} */\nProgressButtonComponent.prototype.addTwoWay;\n/** @type {?} */\nProgressButtonComponent.prototype.ngEle;\n/** @type {?} */\nProgressButtonComponent.prototype.srenderer;\n/** @type {?} */\nProgressButtonComponent.prototype.viewContainerRef;\n/** @type {?} */\nProgressButtonComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressButtonComponent } from './progressbutton.component';\n/**\n * NgModule definition for the ProgressButton component.\n */\nexport class ProgressButtonModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        ProgressButtonComponent\n    ],\n    exports: [\n        ProgressButtonComponent\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressButtonModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressButtonComponent } from './progressbutton.component';\nimport { ProgressButtonModule } from './progressbutton.module';\n/**\n * NgModule definition for the ProgressButton component with providers.\n */\nexport class ProgressButtonAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ProgressButtonModule],\n    exports: [\n        ProgressButtonModule\n    ],\n    providers:[\n        \n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ProgressButtonAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nProgressButtonAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nProgressButtonAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["outputs","DropDownButtonItemDirective","_super","viewContainerRef","_this","call","this","setValue","registerEvents","__extends","ComplexBase","decorators","type","Directive","args","selector","inputs","queries","ctorParameters","ViewContainerRef","DropDownButtonItemsDirective","ArrayBase","children","ContentChildren","twoWays","exports","DropDownButtonComponent","ngEle","srenderer","injector","tags","element","nativeElement","injectedModules","addTwoWay","prototype","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","DropDownButton","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","childItems","ContentChild","ElementRef","Renderer2","Injector","__decorate","ComponentMixins","ComponentBase","__metadata","DropDownButtonModule","NgModule","imports","CommonModule","declarations","DropDownButtonAllModule","providers","SplitButtonItemDirective","SplitButtonItemsDirective","SplitButtonComponent","SplitButton","SplitButtonModule","SplitButtonAllModule","ProgressButtonComponent","ProgressButton","ProgressButtonModule","ProgressButtonAllModule"],"mappings":"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"}
