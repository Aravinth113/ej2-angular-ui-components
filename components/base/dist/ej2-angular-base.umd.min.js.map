{"version":3,"file":"ej2-angular-base.umd.min.js","sources":["../src/util.js","../src/template.js","../src/complex-array-base.js","../src/component-base.js","../src/form-base.js"],"sourcesContent":["import { EventEmitter } from '@angular/core';\n/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            derivedClass.prototype[name] = baseClass.prototype[name];\n        });\n    });\n}\n/* tslint:disable */\nexport function ComponentMixins(baseClass) {\n    return function (derivedClass) {\n        applyMixins(derivedClass, baseClass);\n    };\n}\n/**\n * @private\n */\nexport function registerEvents(eventList, obj, direct) {\n    var ngEventsEmitter = {};\n    if (eventList && eventList.length) {\n        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n            var event_1 = eventList_1[_i];\n            if (direct === true) {\n                obj.propCollection[event_1] = new EventEmitter(false);\n                obj[event_1] = obj.propCollection[event_1];\n            }\n            else {\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n        }\n        if (direct !== true) {\n            obj.setProperties(ngEventsEmitter, true);\n        }\n    }\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames, index) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            /* istanbul ignore next */\n            if (index) {\n                for (var e = 0; e < index.length; e++) {\n                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {\n                        var value = _this.registeredTemplate.template[m].rootNodes[0];\n                        if (value === index[e]) {\n                            var rt = _this.registeredTemplate[registeredTemplate];\n                            rt[m].destroy();\n                        }\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                    var rt = _c[_b];\n                    if (!rt.destroyed) {\n                        var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                        for (var m = 0; m < rt.rootNodes.length; m++) {\n                            pNode.appendChild(rt.rootNodes[m]);\n                        }\n                        rt.destroy();\n                    }\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            var viewCollection = component ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = propName ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue } from '@syncfusion/ej2-base';\nimport { clearTemplate, registerEvents } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this, true);\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.hasChanges = true;\n    };\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ComplexBase.prototype.getProperties = function () {\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        this.hasChanges = false;\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        this.list = this.children.map(function (child) {\n            child.index = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var _this = this;\n        var result = false;\n        var index = 0;\n        /* istanbul ignore next */\n        this.hasNewChildren = (this.list.length !== this.children.length) ? true : null;\n        /* istanbul ignore next */\n        if (this.hasNewChildren) {\n            this.list = this.children.map(function (child) {\n                child.index = index++;\n                child.property = _this.propertyName;\n                return child;\n            });\n        }\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined, attributes, createElement } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate, registerEvents } from './util';\nvar SVG_REG = /^svg|^path|^g/;\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    ComponentBase.prototype.ngOnInit = function () {\n        var _this = this;\n        this.registeredTemplate = {};\n        this.ngBoundedEvents = {};\n        this.isAngular = true;\n        this.tags = this.tags || [];\n        this.complexTemplate = this.complexTemplate || [];\n        this.tagObjects = [];\n        this.ngAttr = this.getAngularAttr(this.element);\n        /* istanbul ignore next */\n        this.createElement = function (tagName, prop) {\n            //tslint:disable-next-line\n            var ele = _this.srenderer ? _this.srenderer.createElement(tagName) : createElement(tagName);\n            if (typeof (prop) === 'undefined') {\n                return ele;\n            }\n            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');\n            if (prop.className !== undefined) {\n                ele.className = prop.className;\n            }\n            if (prop.id !== undefined) {\n                ele.id = prop.id;\n            }\n            if (prop.styles !== undefined) {\n                ele.setAttribute('style', prop.styles);\n            }\n            if (_this.ngAttr !== undefined) {\n                ele.setAttribute(_this.ngAttr, '');\n            }\n            if (prop.attrs !== undefined) {\n                attributes(ele, prop.attrs);\n            }\n            return ele;\n        };\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this),\n                name: tag\n            };\n            this.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(this);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), val);\n            this.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.getAngularAttr = function (ele) {\n        var attributes = ele.attributes;\n        var length = attributes.length;\n        var ngAr;\n        for (var i = 0; i < length; i++) {\n            if (/_ngcontent/g.test(attributes[i].name)) {\n                ngAr = attributes[i].name;\n            }\n        }\n        return ngAr;\n    };\n    ;\n    ComponentBase.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                _this.appendTo(_this.element);\n            }\n        });\n    };\n    ComponentBase.prototype.ngOnDestroy = function () {\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined' && this.element.classList.contains('e-control')) {\n            this.destroy();\n            this.clearTemplate(null);\n        }\n    };\n    //tslint:disable-next-line\n    ComponentBase.prototype.clearTemplate = function (templateNames, index) {\n        clearTemplate(this, templateNames, index);\n    };\n    ;\n    ComponentBase.prototype.ngAfterContentChecked = function () {\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) &&\n                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    this.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        if (list.hasChanges) {\n                            var curIndex = tagObject.instance.list.indexOf(list);\n                            getValue(tagObject.name, this)[curIndex].setProperties(list.getProperties());\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this);\n    };\n    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        if (oldVal === newVal) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs) {\n        var eventObj = getValue(eventName, this);\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = false;\n        if (eventArgs) {\n            eventArgs.name = eventName;\n        }\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n        this.isProtectedOnChange = prevDetection;\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","import { getValue, setValue, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        var value = (e.checked === undefined ? e.value : e.checked);\n        if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {\n            // Update angular from our control\n            this.propagateChange(value);\n            this.angularValue = value;\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        var ele = this.inputElement || this.element;\n        if (oldVal === newVal &&\n            (ele.value === undefined || ele.value === '')) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    FormBase.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else */\n            if (typeof window !== 'undefined') {\n                _this.appendTo(_this.element);\n                var ele = _this.inputElement || _this.element;\n                ele.addEventListener('focus', _this.ngOnFocus.bind(_this));\n                ele.addEventListener('blur', _this.ngOnBlur.bind(_this));\n            }\n        });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            if (typeof value === 'boolean') {\n                this.checked = value;\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        if (value === null) {\n            return;\n        }\n        this.angularValue = value;\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["applyMixins","derivedClass","baseClass","forEach","Object","getOwnPropertyNames","prototype","name","registerEvents","eventList","obj","direct","ngEventsEmitter","length","_i","eventList_1","event_1","propCollection","EventEmitter","setProperties","clearTemplate","_this","templateNames","index","regTemplates","keys","registeredTemplate","regProperties","filter","val","test","_a","e","m","template","rootNodes","rt","destroy","_b","_c","destroyed","pNode","_view","renderer","parentNode","appendChild","_loop_1","tagObject","instance","RegExp","_d","_e","tagObjects","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","viewCollection","getValue","push","ComplexBase","this","hasChanges","tags","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","replace","setValue","ngOnChanges","changes","changedVal","currentValue","getProperties","isChanged","result","item","ngAfterContentChecked","ngAfterViewChecked","ArrayBase","propertyName","list","isInitChanges","ngAfterContentInit","children","map","child","property","onlyProp","hasNewChildren","ngAfterViewInit","ComponentBase","isProtectedOnChange","saveChanges","key","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","dataBind","bind","clearTimeout","ngBoundedEvents","isAngular","complexTemplate","ngAttr","getAngularAttr","element","createElement","tagName","prop","ele","srenderer","innerHTML","undefined","className","id","styles","setAttribute","attrs","attributes","complexTemplates","complexTemplates_1","ngAr","i","window","appendTo","ngOnDestroy","classList","contains","isUndefined","propObj","curIndex","indexOf","twoWaySetter","newVal","oldVal","properties","isNullOrUndefined","emit","addTwoWay","propList","this_1","defineProperty","get","set","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","prevDetection","next","localEventObj","charAt","slice","call","FormBase","propagateChange","_","propagateTouch","localChange","value","checked","angularValue","registerOnChange","registerFunction","registerOnTouched","inputElement","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine","nameSpace","object","split","fromObj","defaultValue","target","propertyDescriptor","setter","getter","enumerable","configurable"],"mappings":"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"}