{"version":3,"file":"ej2-angular-base.min.js","sources":["../../src/util.js","../../src/template.js","../../src/complex-array-base.js","../../src/component-base.js","../../src/form-base.js"],"sourcesContent":["import { EventEmitter } from '@angular/core';\n/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            if (!derivedClass.prototype.hasOwnProperty(name) || baseClass.prototype.constructor.name === 'FormBase') {\n                derivedClass.prototype[name] = baseClass.prototype[name];\n            }\n        });\n    });\n}\n/* tslint:disable */\nexport function ComponentMixins(baseClass) {\n    return function (derivedClass) {\n        applyMixins(derivedClass, baseClass);\n    };\n}\n/**\n * @private\n */\nexport function registerEvents(eventList, obj, direct) {\n    var ngEventsEmitter = {};\n    if (eventList && eventList.length) {\n        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n            var event_1 = eventList_1[_i];\n            if (direct === true) {\n                obj.propCollection[event_1] = new EventEmitter(false);\n                obj[event_1] = obj.propCollection[event_1];\n            }\n            else {\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n        }\n        if (direct !== true) {\n            obj.setProperties(ngEventsEmitter, true);\n        }\n    }\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames, index) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        /* istanbul ignore next */\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            /* istanbul ignore next */\n            if (index && index.length) {\n                for (var e = 0; e < index.length; e++) {\n                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {\n                        var value = _this.registeredTemplate.template[m].rootNodes[0];\n                        if (value === index[e]) {\n                            var rt = _this.registeredTemplate[registeredTemplate];\n                            rt[m].destroy();\n                        }\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                    var rt = _c[_b];\n                    if (!rt.destroyed) {\n                        if (rt._view) {\n                            var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                            for (var m = 0; m < rt.rootNodes.length; m++) {\n                                pNode.appendChild(rt.rootNodes[m]);\n                            }\n                        }\n                        rt.destroy();\n                    }\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            /* istanbul ignore next */\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    /* istanbul ignore next */\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            /* istanbul ignore next */\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            viewRef.markForCheck();\n            /* istanbul ignore next */\n            var viewCollection = component ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = propName ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        /* istanbul ignore next */\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue } from '@syncfusion/ej2-base';\nimport { clearTemplate, registerEvents } from './util';\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n        // Angular 9 compatibility to overcome ngOnchange not get triggered issue\n        // To Update properties to \"this.propCollection\"\n        var propList = Object.keys(this);\n        /* istanbul ignore next */\n        if (this.directivePropList) {\n            for (var k = 0; k < this.directivePropList.length; k++) {\n                var dirPropName = this.directivePropList[k];\n                if (propList.indexOf(dirPropName) !== -1) {\n                    setValue(dirPropName, getValue(dirPropName, this), this.propCollection);\n                }\n            }\n            this.hasChanges = true;\n        }\n    };\n    ComplexBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this, true);\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.isUpdated = false;\n        this.hasChanges = true;\n    };\n    /* istanbul ignore next */\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ComplexBase.prototype.getProperties = function () {\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        // For angular 9 compatibility\n        // ngOnchange hook not get triggered for copmplex directive\n        // Due to this, we have manually set template properties v alues once we get template property reference\n        for (var _i = 0, templateProperties_2 = templateProperties; _i < templateProperties_2.length; _i++) {\n            var tempName = templateProperties_2[_i];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        /* istanbul ignore next */\n        if (this.isUpdated) {\n            this.hasChanges = false;\n        }\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        /* istanbul ignore next */\n        this.list = this.children.map(function (child) {\n            child.index = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var _this = this;\n        var result = false;\n        var index = 0;\n        var isSourceChanged = false;\n        // tslint:disable-next-line\n        var childrenDataSource = this.children.map(function (child) {\n            return child;\n        });\n        /* istanbul ignore next */\n        if (this.list.length === this.children.length) {\n            for (var i = 0; i < this.list.length; i++) {\n                if (this.list[i].propCollection.dataSource) {\n                    isSourceChanged = (JSON.stringify(this.list[i].propCollection.dataSource) !==\n                        JSON.stringify(childrenDataSource[i].propCollection.dataSource));\n                }\n                else {\n                    // tslint:disable-next-line\n                    var keys = Object.keys(this.list[i].propCollection);\n                    for (var j = 0; j < keys.length; j++) {\n                        if (this.list[i].propCollection[keys[j]] &&\n                            this.list[i].propCollection[keys[j]].constructor.name === 'TemplateRef_') {\n                            isSourceChanged = true;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        this.hasNewChildren = (this.list.length !== this.children.length || isSourceChanged) ? true : null;\n        if (this.hasNewChildren) {\n            this.list = this.children.map(function (child) {\n                child.index = index++;\n                child.property = _this.propertyName;\n                return child;\n            });\n        }\n        /* istanbul ignore end */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        for (var i = 0; i < this.list.length; i++) {\n            this.list[i].isUpdated = true;\n        }\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined, attributes, createElement } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate, registerEvents } from './util';\nvar SVG_REG = /^svg|^path|^g/;\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnThis = isTempRef || this;\n        tempOnThis.registeredTemplate = {};\n        tempOnThis.ngBoundedEvents = {};\n        tempOnThis.isAngular = true;\n        /* istanbul ignore next */\n        if (isTempRef) {\n            this.tags = isTempRef.tags;\n        }\n        tempOnThis.tags = this.tags || [];\n        tempOnThis.complexTemplate = this.complexTemplate || [];\n        tempOnThis.tagObjects = [];\n        tempOnThis.ngAttr = this.getAngularAttr(tempOnThis.element);\n        /* istanbul ignore next */\n        tempOnThis.createElement = function (tagName, prop) {\n            //tslint:disable-next-line\n            var ele = tempOnThis.srenderer ? tempOnThis.srenderer.createElement(tagName) : createElement(tagName);\n            if (typeof (prop) === 'undefined') {\n                return ele;\n            }\n            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');\n            if (prop.className !== undefined) {\n                ele.className = prop.className;\n            }\n            if (prop.id !== undefined) {\n                ele.id = prop.id;\n            }\n            if (prop.styles !== undefined) {\n                ele.setAttribute('style', prop.styles);\n            }\n            if (tempOnThis.ngAttr !== undefined) {\n                ele.setAttribute(tempOnThis.ngAttr, '');\n            }\n            if (prop.attrs !== undefined) {\n                attributes(ele, prop.attrs);\n            }\n            return ele;\n        };\n        for (var _i = 0, _a = tempOnThis.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tempOnThis),\n                name: tag\n            };\n            tempOnThis.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(tempOnThis);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, tempOnThis), val);\n            tempOnThis.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.getAngularAttr = function (ele) {\n        var attributes = ele.attributes;\n        var length = attributes.length;\n        var ngAr;\n        for (var i = 0; i < length; i++) {\n            /* istanbul ignore next */\n            if (/_ngcontent/g.test(attributes[i].name)) {\n                ngAr = attributes[i].name;\n            }\n        }\n        return ngAr;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterViewThis = isTempRef || this;\n        var regExp = /ejs-tab|ejs-accordion/g;\n        /* istanbul ignore next */\n        if (regExp.test(tempAfterViewThis.ngEle.nativeElement.outerHTML)) {\n            tempAfterViewThis.ngEle.nativeElement.style.visibility = 'hidden';\n        }\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                tempAfterViewThis.appendTo(tempAfterViewThis.element);\n                tempAfterViewThis.ngEle.nativeElement.style.visibility = '';\n            }\n        });\n    };\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnDestroy = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnDestroyThis = isTempRef || this;\n        /* istanbul ignore else  */\n        if (typeof window !== 'undefined' && tempOnDestroyThis.element.classList.contains('e-control')) {\n            tempOnDestroyThis.destroy();\n            tempOnDestroyThis.clearTemplate(null);\n        }\n    };\n    //tslint:disable-next-line\n    ComponentBase.prototype.clearTemplate = function (templateNames, index) {\n        clearTemplate(this, templateNames, index);\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterContentChecked = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterContentThis = isTempRef || this;\n        for (var _i = 0, _a = tempAfterContentThis.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) &&\n                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    // For angular 9 compatibility\n                    // Not able to get complex directive properties reference ni Onint hook\n                    // So we have constructed property here and used\n                    var complexDirProps = void 0;\n                    var list = getValue('instance.list', tagObject);\n                    if (list && list.length) {\n                        complexDirProps = list[0].directivePropList;\n                    }\n                    var skip = true;\n                    if (tempAfterContentThis.getModuleName && tempAfterContentThis.getModuleName() === 'gantt') {\n                        skip = false;\n                    }\n                    if (complexDirProps && skip && complexDirProps.indexOf(tagObject.instance.propertyName) === -1) {\n                        var compDirPropList = Object.keys(tagObject.instance.list[0].propCollection);\n                        for (var h = 0; h < tagObject.instance.list.length; h++) {\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName] = [];\n                            var obj = {};\n                            for (var k = 0; k < compDirPropList.length; k++) {\n                                var complexPropName = compDirPropList[k];\n                                obj[complexPropName] = tagObject.instance.list[h].propCollection[complexPropName];\n                            }\n                            for (var i = 0; i < tagObject.instance.list[h].tags.length; i++) {\n                                var tag = tagObject.instance.list[h].tags[i];\n                                var childObj = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tagObject.instance.list[h]);\n                                if (childObj) {\n                                    var innerchildObj = tagObject.instance.list[h]['child' + tag.substring(0, 1).toUpperCase() + tag.substring(1)];\n                                    if (innerchildObj) {\n                                        for (var j = 0; j < innerchildObj.list.length; j++) {\n                                            var innerTag = innerchildObj.list[0].tags[0];\n                                            if (innerTag) {\n                                                var innerchildTag = getValue('child' + innerTag.substring(0, 1).toUpperCase() + innerTag.substring(1), innerchildObj.list[j]);\n                                                innerchildObj.list[j].tagObjects.push({ instance: innerchildTag, name: innerTag });\n                                            }\n                                        }\n                                    }\n                                    tagObject.instance.list[h].tagObjects.push({ instance: childObj, name: tag });\n                                }\n                            }\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName].push(obj);\n                        }\n                    }\n                    // End angular 9 compatibility\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    tempAfterContentThis.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    /* istanbul ignore next */\n                    var oldProbLength = tempAfterContentThis[tagObject.name].length;\n                    var newPropLendgth = tagObject.instance.list.length;\n                    if (oldProbLength !== newPropLendgth && tagObject.instance.list[0].hasChanges) {\n                        tempAfterContentThis[tagObject.name] = tagObject.instance.list;\n                    }\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        if (list.hasChanges) {\n                            var curIndex = tagObject.instance.list.indexOf(list);\n                            var curChild = getValue(tagObject.name, tempAfterContentThis)[curIndex];\n                            if (curChild !== undefined && curChild.setProperties !== undefined) {\n                                curChild.setProperties(list.getProperties());\n                            }\n                            list.isUpdated = true;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this);\n    };\n    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        if (oldVal === newVal) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs, success) {\n        var eventObj = getValue(eventName, this);\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = false;\n        if (eventArgs) {\n            eventArgs.name = eventName;\n        }\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n        this.isProtectedOnChange = prevDetection;\n        /* istanbul ignore else  */\n        if (success) {\n            success.call(this, eventArgs);\n        }\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","import { getValue, setValue, isNullOrUndefined, isObject } from '@syncfusion/ej2-base';\n/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        //tslint:disable-next-line\n        var value = (e.checked === undefined ? e.value : e.checked);\n        this.objCheck = isObject(value);\n        if (this.objCheck === true) {\n            this.duplicateValue = JSON.stringify(value);\n            this.duplicateAngularValue = JSON.stringify(this.angularValue);\n            if (this.duplicateValue !== this.duplicateAngularValue && this.propagateChange !== undefined && value !== undefined) {\n                // Update angular from our control\n                this.propagateChange(value);\n                this.angularValue = value;\n            }\n        }\n        else {\n            if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {\n                // While reset form using reset() method ng-dirty not get updated, so while value is empty just update angularValue only\n                if (value !== '' && value !== null) {\n                    // Update angular from our control\n                    this.propagateChange(value);\n                    this.angularValue = value;\n                }\n                else {\n                    //tslint:disable-next-line\n                    var optionalValue = value;\n                    this.propagateChange(optionalValue);\n                    this.angularValue = value;\n                }\n            }\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        var ele = this.inputElement || this.element;\n        if (oldVal === newVal &&\n            (ele.value === undefined || ele.value === '')) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    // tslint:disable-next-line:no-any\n    FormBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempFormAfterViewThis = isTempRef || this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        // Removed setTimeout, Because we have called markForCheck() method in Angular Template Compiler\n        // setTimeout(() => {\n        /* istanbul ignore else */\n        if (typeof window !== 'undefined') {\n            tempFormAfterViewThis.appendTo(tempFormAfterViewThis.element);\n            var ele = tempFormAfterViewThis.inputElement || tempFormAfterViewThis.element;\n            ele.addEventListener('focus', tempFormAfterViewThis.ngOnFocus.bind(tempFormAfterViewThis));\n            ele.addEventListener('blur', tempFormAfterViewThis.ngOnBlur.bind(tempFormAfterViewThis));\n        }\n        // });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n        this.disabled = disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        var regExp = /ejs-radiobutton/g;\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            // To resolve boolean type formControl value is not working for radio button control.\n            /* istanbul ignore next */\n            if (typeof value === 'boolean') {\n                if (this.ngEle && regExp.test(this.ngEle.nativeElement.outerHTML)) {\n                    this.checked = value === this.value;\n                }\n                else {\n                    this.checked = value;\n                }\n            }\n            else {\n                this.checked = value === this.value;\n            }\n        }\n        if (value === null) {\n            return;\n        }\n        this.angularValue = value;\n        // When binding Html textbox value to syncfusion textbox, change event triggered dynamically.\n        // To prevent change event, trigger change in component side based on `preventChange` value\n        this.preventChange = true;\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["applyMixins","derivedClass","baseClass","forEach","Object","getOwnPropertyNames","prototype","name","hasOwnProperty","constructor","ComponentMixins","registerEvents","eventList","obj","direct","ngEventsEmitter","length","_i","eventList_1","event_1","propCollection","EventEmitter","setProperties","clearTemplate","_this","templateNames","index","regTemplates","keys","registeredTemplate","regProperties","filter","val","test","_a","e","m","template","rootNodes","rt","destroy","_b","_c","destroyed","_view","pNode","renderer","parentNode","appendChild","_d","_e","tagObjects","tagObject","instance","RegExp","setValue","nameSpace","value","object","replace","split","fromObj","i","key","undefined","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","markForCheck","viewCollection","getValue","push","Template","defaultValue","target","propertyDescriptor","set","setter","get","getter","enumerable","configurable","defineProperty","this","saveChanges","dataBind","ComplexBase","hasChanges","tags","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","propList","directivePropList","k","dirPropName","indexOf","ngOnChanges","changes","changedVal","currentValue","isUpdated","getProperties","isChanged","result","item","ngAfterContentChecked","templateProperties_2","ej2Base","ngAfterViewChecked","ArrayBase","propertyName","list","isInitChanges","ngAfterContentInit","children","map","child","property","onlyProp","isSourceChanged","childrenDataSource","dataSource","JSON","stringify","j","hasNewChildren","ngAfterViewInit","ComponentBase","isProtectedOnChange","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","bind","clearUpdate","clearTimeout","isTempRef","tempOnThis","ngBoundedEvents","isAngular","complexTemplate","ngAttr","getAngularAttr","element","createElement","tagName","prop","ele","srenderer","innerHTML","className","id","styles","setAttribute","attrs","attributes","complexTemplates","complexTemplates_1","ngAr","tempAfterViewThis","ngEle","outerHTML","style","visibility","window","appendTo","ngOnDestroy","tempOnDestroyThis","classList","contains","tempAfterContentThis","isUndefined","propObj","complexDirProps","skip","getModuleName","compDirPropList","h","complexPropName","childObj","innerchildObj","innerTag","innerchildTag","curIndex","curChild","twoWaySetter","newVal","oldVal","properties","isNullOrUndefined","emit","addTwoWay","this_1","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","success","prevDetection","next","localEventObj","charAt","slice","call","FormBase","propagateChange","_","propagateTouch","localChange","checked","objCheck","isObject","duplicateValue","duplicateAngularValue","angularValue","optionalValue","registerOnChange","registerFunction","registerOnTouched","inputElement","tempFormAfterViewThis","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","regExp","preventChange","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine"],"mappings":"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"}