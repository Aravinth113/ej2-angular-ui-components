!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@syncfusion/ej2-angular-base"),require("@syncfusion/ej2-treemap"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@syncfusion/ej2-angular-base","@syncfusion/ej2-treemap","@angular/common"],t):t(e["ej2-angular-treemap"]={},e.ng.core,e.ej2.angular.base,e.ej2.treemap,e.ng.common)}(this,function(e,t,n,r,o){"use strict";var i=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),a=["color","from","label","maxOpacity","minOpacity","showLegend","to","value"],l=[],c=function(e){function t(t){var r=e.call(this)||this;return r.viewContainerRef=t,n.setValue("currentInstance",r,r.viewContainerRef),r.registerEvents(l),r.directivePropList=a,r}return i(t,e),t}(n.ComplexBase);c.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-colorMappings>e-colorMapping",inputs:a,outputs:l,queries:{}}]}],c.ctorParameters=function(){return[{type:t.ViewContainerRef}]};var s=function(e){function t(){return e.call(this,"colormapping")||this}return i(t,e),t}(n.ArrayBase);s.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-colorMappings",queries:{children:new t.ContentChildren(c)}}]}],s.ctorParameters=function(){return[]};var p=this&&this.__decorate||function(e,t,n,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(i<3?o(a):i>3?o(t,n,a):o(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},d=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},g=["autoFill","border","colorMapping","fill","groupGap","groupPadding","groupPath","headerAlignment","headerFormat","headerHeight","headerStyle","headerTemplate","opacity","showHeader","templatePosition"],u=[],m=function(e){function t(t){var r=e.call(this)||this;return r.viewContainerRef=t,r.tags=["colorMapping"],n.setValue("currentInstance",r,r.viewContainerRef),r.registerEvents(u),r.directivePropList=g,r}return i(t,e),t}(n.ComplexBase);m.decorators=[{type:t.Directive,args:[{selector:"e-levels>e-level",inputs:g,outputs:u,queries:{childColorMapping:new t.ContentChild(s)}}]}],m.ctorParameters=function(){return[{type:t.ViewContainerRef}]},m.propDecorators={headerTemplate:[{type:t.ContentChild,args:["headerTemplate"]}]},p([n.Template(),d("design:type",Object)],m.prototype,"headerTemplate",void 0);var h=function(e){function t(){return e.call(this,"levels")||this}return i(t,e),t}(n.ArrayBase);h.decorators=[{type:t.Directive,args:[{selector:"ej-treemap>e-levels",queries:{children:new t.ContentChildren(m)}}]}],h.ctorParameters=function(){return[]};var f=this&&this.__decorate||function(e,t,n,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(i<3?o(a):i>3?o(t,n,a):o(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},T=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},C=["background","border","breadcrumbConnector","colorValuePath","dataSource","description","drillDownView","enableBreadcrumb","enableDrillDown","enablePersistence","enableRtl","equalColorValuePath","format","height","highlightSettings","initialDrillDown","layoutType","leafItemSettings","legendSettings","levels","locale","margin","palette","query","rangeColorValuePath","renderDirection","selectionSettings","tabIndex","theme","titleSettings","tooltipSettings","useGroupingSeparator","weightValuePath","width"],v=["beforePrint","click","doubleClick","drillEnd","drillStart","itemClick","itemHighlight","itemMove","itemRendering","itemSelected","legendItemRendering","legendRendering","load","loaded","mouseMove","resize","rightClick","tooltipRendering"],M=[""];e.TreeMapComponent=function(e){function t(t,r,o,i){var a=e.call(this)||this;a.ngEle=t,a.srenderer=r,a.viewContainerRef=o,a.injector=i,a.tags=["levels"],a.element=a.ngEle.nativeElement,a.injectedModules=a.injectedModules||[];try{var l=a.injector.get("TreeMapTreeMapTooltip");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(c){}try{l=a.injector.get("TreeMapTreeMapLegend");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(s){}try{l=a.injector.get("TreeMapTreeMapHighlight");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(p){}try{l=a.injector.get("TreeMapTreeMapSelection");-1===a.injectedModules.indexOf(l)&&a.injectedModules.push(l)}catch(d){}return a.registerEvents(v),a.addTwoWay.call(a,M),n.setValue("currentInstance",a,a.viewContainerRef),a.context=new n.ComponentBase,a}return i(t,e),t.prototype.ngOnInit=function(){this.context.ngOnInit(this)},t.prototype.ngAfterViewInit=function(){this.context.ngAfterViewInit(this)},t.prototype.ngOnDestroy=function(){this.context.ngOnDestroy(this)},t.prototype.ngAfterContentChecked=function(){this.tagObjects[0].instance=this.childLevels,this.context.ngAfterContentChecked(this)},t}(r.TreeMap),e.TreeMapComponent.decorators=[{type:t.Component,args:[{selector:"ejs-treemap",inputs:C,outputs:v,template:"",changeDetection:t.ChangeDetectionStrategy.OnPush,queries:{childLevels:new t.ContentChild(h)}}]}],e.TreeMapComponent.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:t.ViewContainerRef},{type:t.Injector}]},e.TreeMapComponent.propDecorators={tooltipSettings_template:[{type:t.ContentChild,args:["tooltipSettingsTemplate"]}],leafItemSettings_labelTemplate:[{type:t.ContentChild,args:["leafItemSettingsLabelTemplate"]}]},f([n.Template(),T("design:type",Object)],e.TreeMapComponent.prototype,"tooltipSettings_template",void 0),f([n.Template(),T("design:type",Object)],e.TreeMapComponent.prototype,"leafItemSettings_labelTemplate",void 0),e.TreeMapComponent=f([n.ComponentMixins([n.ComponentBase]),T("design:paramtypes",[t.ElementRef,t.Renderer2,t.ViewContainerRef,t.Injector])],e.TreeMapComponent);var y=function(){return function(){}}();y.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule],declarations:[e.TreeMapComponent,c,s,m,h],exports:[e.TreeMapComponent,c,s,m,h]}]}],y.ctorParameters=function(){return[]};var S={provide:"TreeMapTreeMapTooltip",useValue:r.TreeMapTooltip},b={provide:"TreeMapTreeMapLegend",useValue:r.TreeMapLegend},x={provide:"TreeMapTreeMapHighlight",useValue:r.TreeMapHighlight},R={provide:"TreeMapTreeMapSelection",useValue:r.TreeMapSelection},j=function(){return function(){}}();j.decorators=[{type:t.NgModule,args:[{imports:[o.CommonModule,y],exports:[y],providers:[S,b,x,R]}]}],j.ctorParameters=function(){return[]},e.ColorMappingDirective=c,e.ColorMappingsDirective=s,e.LevelDirective=m,e.LevelsDirective=h,e.TreeMapModule=y,e.TreeMapAllModule=j,e.TreeMapTooltipService=S,e.TreeMapLegendService=b,e.TreeMapHighlightService=x,e.TreeMapSelectionService=R,e.ɵa=C,e.ɵb=v,e.TreeMap=r.TreeMap,e.LevelsData=r.LevelsData,e.Border=r.Border,e.Margin=r.Margin,e.Font=r.Font,e.CommonTitleSettings=r.CommonTitleSettings,e.SubTitleSettings=r.SubTitleSettings,e.TitleSettings=r.TitleSettings,e.ColorMapping=r.ColorMapping,e.LegendSettings=r.LegendSettings,e.InitialDrillSettings=r.InitialDrillSettings,e.LeafItemSettings=r.LeafItemSettings,e.TooltipSettings=r.TooltipSettings,e.SelectionSettings=r.SelectionSettings,e.HighlightSettings=r.HighlightSettings,e.LevelSettings=r.LevelSettings,e.load=r.load,e.loaded=r.loaded,e.beforePrint=r.beforePrint,e.itemRendering=r.itemRendering,e.drillStart=r.drillStart,e.drillEnd=r.drillEnd,e.itemSelected=r.itemSelected,e.itemHighlight=r.itemHighlight,e.tooltipRendering=r.tooltipRendering,e.itemClick=r.itemClick,e.itemMove=r.itemMove,e.click=r.click,e.doubleClick=r.doubleClick,e.rightClick=r.rightClick,e.mouseMove=r.mouseMove,e.legendItemRendering=r.legendItemRendering,e.legendRendering=r.legendRendering,e.resize=r.resize,e.defaultFont=r.defaultFont,e.Theme=r.Theme,e.getThemeStyle=r.getThemeStyle,e.Size=r.Size,e.stringToNumber=r.stringToNumber,e.Rect=r.Rect,e.RectOption=r.RectOption,e.PathOption=r.PathOption,e.measureText=r.measureText,e.TextOption=r.TextOption,e.textTrim=r.textTrim,e.Location=r.Location,e.findPosition=r.findPosition,e.createTextStyle=r.createTextStyle,e.renderTextElement=r.renderTextElement,e.getElement=r.getElement,e.itemsToOrder=r.itemsToOrder,e.isContainsData=r.isContainsData,e.findChildren=r.findChildren,e.findHightLightItems=r.findHightLightItems,e.getTemplateFunction=r.getTemplateFunction,e.convertElement=r.convertElement,e.findLabelLocation=r.findLabelLocation,e.measureElement=r.measureElement,e.getArea=r.getArea,e.getShortestEdge=r.getShortestEdge,e.convertToContainer=r.convertToContainer,e.convertToRect=r.convertToRect,e.getMousePosition=r.getMousePosition,e.colorMap=r.colorMap,e.deSaturationColor=r.deSaturationColor,e.colorCollections=r.colorCollections,e.rgbToHex=r.rgbToHex,e.getColorByValue=r.getColorByValue,e.getGradientColor=r.getGradientColor,e.getPercentageColor=r.getPercentageColor,e.getPercentage=r.getPercentage,e.wordWrap=r.wordWrap,e.textWrap=r.textWrap,e.hide=r.hide,e.orderByArea=r.orderByArea,e.removeClassNames=r.removeClassNames,e.applyOptions=r.applyOptions,e.textFormatter=r.textFormatter,e.formatValue=r.formatValue,e.ColorValue=r.ColorValue,e.convertToHexCode=r.convertToHexCode,e.componentToHex=r.componentToHex,e.convertHexToColor=r.convertHexToColor,e.colorNameToHex=r.colorNameToHex,e.drawSymbol=r.drawSymbol,e.renderLegendShape=r.renderLegendShape,e.isParentItem=r.isParentItem,e.TreeMapAjax=r.TreeMapAjax,e.removeShape=r.removeShape,e.removeLegend=r.removeLegend,e.setColor=r.setColor,e.removeSelectionWithHighlight=r.removeSelectionWithHighlight,e.getLegendIndex=r.getLegendIndex,e.pushCollection=r.pushCollection,e.ExportUtils=r.ExportUtils,e.TreeMapLegend=r.TreeMapLegend,e.LayoutPanel=r.LayoutPanel,e.TreeMapHighlight=r.TreeMapHighlight,e.TreeMapSelection=r.TreeMapSelection,e.TreeMapTooltip=r.TreeMapTooltip,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ej2-angular-treemap.umd.min.js.map
