!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@syncfusion/ej2-angular-base"),require("@syncfusion/ej2-heatmap"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@syncfusion/ej2-angular-base","@syncfusion/ej2-heatmap","@angular/common"],t):t(e["ej2-angular-heatmap"]=e["ej2-angular-heatmap"]||{},e._angular_core,e._syncfusion_ej2AngularBase,e._syncfusion_ej2Heatmap,e._angular_common)}(this,function(e,t,n,o,r){"use strict";var a=window&&window.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),i=window&&window.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i},c=window&&window.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},u=["cellSelected","allowSelection","cellSettings","dataSource","enablePersistence","enableRtl","height","legendSettings","locale","margin","paletteSettings","renderingMode","showTooltip","theme","titleSettings","tooltipSettings","width","xAxis","yAxis"],p=["cellClick","cellRender","created","load","tooltipRender"],l=[""],s=function(e){function o(t,o,r,a){var i=e.call(this)||this;i.ngEle=t,i.srenderer=o,i.viewContainerRef=r,i.injector=a,i.tags=[""],i.element=i.ngEle.nativeElement,i.injectedModules=i.injectedModules||[];try{i.injectedModules.push(i.injector.get("HeatMapLegend"))}catch(e){}try{i.injectedModules.push(i.injector.get("HeatMapTooltip"))}catch(e){}try{i.injectedModules.push(i.injector.get("HeatMapAdaptor"))}catch(e){}return i.registerEvents(p),i.addTwoWay.call(i,l),n.setValue("currentInstance",i,i.viewContainerRef),i}return a(o,e),o.prototype.ngOnInit=function(){},o.prototype.ngAfterViewInit=function(){},o.prototype.ngOnDestroy=function(){},o.prototype.ngAfterContentChecked=function(){},o.decorators=[{type:t.Component,args:[{selector:"ejs-heatmap",inputs:u,outputs:p,template:"",changeDetection:t.ChangeDetectionStrategy.OnPush,queries:{}}]}],o.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:t.ViewContainerRef},{type:t.Injector}]},o=i([n.ComponentMixins([n.ComponentBase]),c("design:paramtypes",[t.ElementRef,t.Renderer2,t.ViewContainerRef,t.Injector])],o)}(o.HeatMap),d=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule],declarations:[s],exports:[s]}]}],e.ctorParameters=function(){return[]},e}(),f={provide:"HeatMapLegend",useValue:o.Legend},g={provide:"HeatMapTooltip",useValue:o.Tooltip},y={provide:"HeatMapAdaptor",useValue:o.Adaptor},m=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule,d],exports:[d],providers:[f,g,y]}]}],e.ctorParameters=function(){return[]},e}();e.HeatMapComponent=s,e.HeatMapModule=d,e.HeatMapAllModule=m,e.LegendService=f,e.TooltipService=g,e.AdaptorService=y,Object.keys(o).forEach(function(t){e[t]=o[t]}),Object.defineProperty(e,"__esModule",{value:!0})});
