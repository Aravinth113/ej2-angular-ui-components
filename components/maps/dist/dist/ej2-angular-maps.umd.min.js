!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@syncfusion/ej2-angular-base"),require("@syncfusion/ej2-maps"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@syncfusion/ej2-angular-base","@syncfusion/ej2-maps","@angular/common"],t):t(e["ej2-angular-maps"]={},e.ng.core,e.ej2.angular.base,e.ej2.maps,e.ng.common)}(this,function(e,t,n,i,r){"use strict";var a=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),o=[],s=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(o),i}return a(t,e),t}(n.ComplexBase);s.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-initialShapeSelections>e-initialShapeSelection",inputs:["shapePath","shapeValue"],outputs:o,queries:{}}]}],s.ctorParameters=function(){return[{type:t.ViewContainerRef}]};var l=function(e){function t(){return e.call(this,"initialshapeselection")||this}return a(t,e),t}(n.ArrayBase);l.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-initialShapeSelections",queries:{children:new t.ContentChildren(s)}}]}],l.ctorParameters=function(){return[]};var c=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},u=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},p=[],g=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(p),i}return a(t,e),t}(n.ComplexBase);g.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-markerSettings>e-markerSetting",inputs:["animationDelay","animationDuration","border","colorValuePath","dashArray","dataSource","fill","height","highlightSettings","imageUrl","imageUrlValuePath","legendText","offset","opacity","selectionSettings","shape","shapeValuePath","template","tooltipSettings","visible","width"],outputs:p,queries:{}}]}],g.ctorParameters=function(){return[{type:t.ViewContainerRef}]},g.propDecorators={template:[{type:t.ContentChild,args:["template"]}],tooltipSettings_template:[{type:t.ContentChild,args:["tooltipSettingsTemplate"]}]},c([n.Template(),u("design:type",Object)],g.prototype,"template",void 0),c([n.Template(),u("design:type",Object)],g.prototype,"tooltipSettings_template",void 0);var d=function(e){function t(){return e.call(this,"markersettings")||this}return a(t,e),t}(n.ArrayBase);d.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-markerSettings",queries:{children:new t.ContentChildren(g)}}]}],d.ctorParameters=function(){return[]};var m=[],h=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(m),i}return a(t,e),t}(n.ComplexBase);h.decorators=[{type:t.Directive,args:[{selector:"e-bubbleSettings>e-colorMappings>e-colorMapping",inputs:["color","from","label","maxOpacity","minOpacity","showLegend","to","value"],outputs:m,queries:{}}]}],h.ctorParameters=function(){return[{type:t.ViewContainerRef}]};var f=function(e){function t(){return e.call(this,"colormapping")||this}return a(t,e),t}(n.ArrayBase);f.decorators=[{type:t.Directive,args:[{selector:"e-bubbleSettings>e-colorMappings",queries:{children:new t.ContentChildren(h)}}]}],f.ctorParameters=function(){return[]};var y=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},S=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},v=[],C=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,i.tags=["colorMapping"],n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(v),i}return a(t,e),t}(n.ComplexBase);C.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-bubbleSettings>e-bubbleSetting",inputs:["animationDelay","animationDuration","border","bubbleType","colorMapping","colorValuePath","dataSource","fill","highlightSettings","maxRadius","minRadius","opacity","selectionSettings","tooltipSettings","valuePath","visible"],outputs:v,queries:{childColorMapping:new t.ContentChild(f)}}]}],C.ctorParameters=function(){return[{type:t.ViewContainerRef}]},C.propDecorators={tooltipSettings_template:[{type:t.ContentChild,args:["tooltipSettingsTemplate"]}]},y([n.Template(),S("design:type",Object)],C.prototype,"tooltipSettings_template",void 0);var b=function(e){function t(){return e.call(this,"bubblesettings")||this}return a(t,e),t}(n.ArrayBase);b.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-bubbleSettings",queries:{children:new t.ContentChildren(C)}}]}],b.ctorParameters=function(){return[]};var M=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},R=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},w=[],T=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(w),i}return a(t,e),t}(n.ComplexBase);T.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-navigationLineSettings>e-navigationLineSetting",inputs:["angle","arrowSettings","color","dashArray","highlightSettings","latitude","longitude","selectionSettings","visible","width"],outputs:w,queries:{}}]}],T.ctorParameters=function(){return[{type:t.ViewContainerRef}]},T.propDecorators={tooltipSettings_template:[{type:t.ContentChild,args:["tooltipSettingsTemplate"]}]},M([n.Template(),R("design:type",Object)],T.prototype,"tooltipSettings_template",void 0);var P=function(e){function t(){return e.call(this,"navigationlinesettings")||this}return a(t,e),t}(n.ArrayBase);P.decorators=[{type:t.Directive,args:[{selector:"e-layer>e-navigationLineSettings",queries:{children:new t.ContentChildren(T)}}]}],P.ctorParameters=function(){return[]};var j=[],L=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,i.tags=["initialShapeSelection","markerSettings","bubbleSettings","navigationLineSettings"],n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(j),i}return a(t,e),t}(n.ComplexBase);L.decorators=[{type:t.Directive,args:[{selector:"e-layers>e-layer",inputs:["animationDuration","bingMapType","bubbleSettings","dataLabelSettings","dataSource","geometryType","highlightSettings","initialShapeSelection","key","layerType","markerClusterSettings","markerSettings","navigationLineSettings","query","selectionSettings","shapeData","shapeDataPath","shapePropertyPath","shapeSettings","staticMapType","toggleLegendSettings","tooltipSettings","type","urlTemplate","visible"],outputs:j,queries:{childInitialShapeSelection:new t.ContentChild(l),childMarkerSettings:new t.ContentChild(d),childBubbleSettings:new t.ContentChild(b),childNavigationLineSettings:new t.ContentChild(P)}}]}],L.ctorParameters=function(){return[{type:t.ViewContainerRef}]};var k=function(e){function t(){return e.call(this,"layers")||this}return a(t,e),t}(n.ArrayBase);k.decorators=[{type:t.Directive,args:[{selector:"ej-maps>e-layers",queries:{children:new t.ContentChildren(L)}}]}],k.ctorParameters=function(){return[]};var D=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},O=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},x=[],B=function(e){function t(t){var i=e.call(this)||this;return i.viewContainerRef=t,n.setValue("currentInstance",i,i.viewContainerRef),i.registerEvents(x),i}return a(t,e),t}(n.ComplexBase);B.decorators=[{type:t.Directive,args:[{selector:"e-maps-annotations>e-maps-annotation",inputs:["content","horizontalAlignment","verticalAlignment","x","y","zIndex"],outputs:x,queries:{}}]}],B.ctorParameters=function(){return[{type:t.ViewContainerRef}]},B.propDecorators={content:[{type:t.ContentChild,args:["content"]}]},D([n.Template(),O("design:type",Object)],B.prototype,"content",void 0);var _=function(e){function t(){return e.call(this,"annotations")||this}return a(t,e),t}(n.ArrayBase);_.decorators=[{type:t.Directive,args:[{selector:"ej-maps>e-maps-annotations",queries:{children:new t.ContentChildren(B)}}]}],_.ctorParameters=function(){return[]};var A=this&&this.__decorate||function(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},V=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},E=["annotations","background","baseLayerIndex","border","centerPosition","description","enablePersistence","enableRtl","format","height","layers","legendSettings","locale","mapsArea","margin","projectionType","tabIndex","theme","titleSettings","tooltipDisplayMode","useGroupingSeparator","width","zoomSettings"],I=["animationComplete","annotationRendering","beforePrint","bubbleClick","bubbleMouseMove","bubbleRendering","click","dataLabelRendering","doubleClick","itemHighlight","itemSelection","layerRendering","legendRendering","load","loaded","markerClick","markerClusterClick","markerClusterMouseMove","markerClusterRendering","markerMouseMove","markerRendering","pan","resize","rightClick","shapeHighlight","shapeRendering","shapeSelected","tooltipRender","tooltipRenderComplete","zoom","dataSourceChange"],z=["dataSource"];e.MapsComponent=function(e){function t(t,i,r,a){var o=e.call(this)||this;o.ngEle=t,o.srenderer=i,o.viewContainerRef=r,o.injector=a,o.tags=["layers","annotations"],o.element=o.ngEle.nativeElement,o.injectedModules=o.injectedModules||[];try{var s=o.injector.get("MapsBubble");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(l){}try{s=o.injector.get("MapsLegend");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(c){}try{s=o.injector.get("MapsMarker");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(u){}try{s=o.injector.get("MapsHighlight");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(p){}try{s=o.injector.get("MapsSelection");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(g){}try{s=o.injector.get("MapsMapsTooltip");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(d){}try{s=o.injector.get("MapsZoom");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(m){}try{s=o.injector.get("MapsDataLabel");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(h){}try{s=o.injector.get("MapsNavigationLine");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(f){}try{s=o.injector.get("MapsAnnotations");-1===o.injectedModules.indexOf(s)&&o.injectedModules.push(s)}catch(y){}return o.registerEvents(I),o.addTwoWay.call(o,z),n.setValue("currentInstance",o,o.viewContainerRef),o}return a(t,e),t.prototype.ngOnInit=function(){},t.prototype.ngAfterViewInit=function(){},t.prototype.ngOnDestroy=function(){},t.prototype.ngAfterContentChecked=function(){},t}(i.Maps),e.MapsComponent.decorators=[{type:t.Component,args:[{selector:"ejs-maps",inputs:E,outputs:I,template:"",changeDetection:t.ChangeDetectionStrategy.OnPush,queries:{childLayers:new t.ContentChild(k),childAnnotations:new t.ContentChild(_)}}]}],e.MapsComponent.ctorParameters=function(){return[{type:t.ElementRef},{type:t.Renderer2},{type:t.ViewContainerRef},{type:t.Injector}]},e.MapsComponent=A([n.ComponentMixins([n.ComponentBase]),V("design:paramtypes",[t.ElementRef,t.Renderer2,t.ViewContainerRef,t.Injector])],e.MapsComponent);var q=function(){return function(){}}();q.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule],declarations:[e.MapsComponent,s,l,g,d,h,f,C,b,T,P,L,k,B,_],exports:[e.MapsComponent,s,l,g,d,h,f,C,b,T,P,L,k,B,_]}]}],q.ctorParameters=function(){return[]};var N={provide:"MapsBubble",useValue:i.Bubble},H={provide:"MapsLegend",useValue:i.Legend},Z={provide:"MapsMarker",useValue:i.Marker},F={provide:"MapsHighlight",useValue:i.Highlight},W={provide:"MapsSelection",useValue:i.Selection},G={provide:"MapsMapsTooltip",useValue:i.MapsTooltip},U={provide:"MapsZoom",useValue:i.Zoom},J={provide:"MapsDataLabel",useValue:i.DataLabel},K={provide:"MapsNavigationLine",useValue:i.NavigationLine},Q={provide:"MapsAnnotations",useValue:i.Annotations},X=function(){return function(){}}();X.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule,q],exports:[q],providers:[N,H,Z,F,W,G,U,J,K,Q]}]}],X.ctorParameters=function(){return[]},e.InitialShapeSelectionDirective=s,e.InitialShapeSelectionsDirective=l,e.MarkerDirective=g,e.MarkersDirective=d,e.ColorMappingDirective=h,e.ColorMappingsDirective=f,e.BubbleDirective=C,e.BubblesDirective=b,e.NavigationLineDirective=T,e.NavigationLinesDirective=P,e.LayerDirective=L,e.LayersDirective=k,e.AnnotationDirective=B,e.AnnotationsDirective=_,e.MapsModule=q,e.MapsAllModule=X,e.BubbleService=N,e.LegendService=H,e.MarkerService=Z,e.HighlightService=F,e.SelectionService=W,e.MapsTooltipService=G,e.ZoomService=U,e.DataLabelService=J,e.NavigationLineService=K,e.AnnotationsService=Q,e.ɵa=E,e.ɵb=I,e.Maps=i.Maps,e.load=i.load,e.loaded=i.loaded,e.click=i.click,e.rightClick=i.rightClick,e.doubleClick=i.doubleClick,e.resize=i.resize,e.tooltipRender=i.tooltipRender,e.shapeSelected=i.shapeSelected,e.shapeHighlight=i.shapeHighlight,e.mousemove=i.mousemove,e.mouseup=i.mouseup,e.mousedown=i.mousedown,e.layerRendering=i.layerRendering,e.shapeRendering=i.shapeRendering,e.markerRendering=i.markerRendering,e.markerClusterRendering=i.markerClusterRendering,e.markerClick=i.markerClick,e.markerClusterClick=i.markerClusterClick,e.markerMouseMove=i.markerMouseMove,e.markerClusterMouseMove=i.markerClusterMouseMove,e.dataLabelRendering=i.dataLabelRendering,e.bubbleRendering=i.bubbleRendering,e.bubbleClick=i.bubbleClick,e.bubbleMouseMove=i.bubbleMouseMove,e.animationComplete=i.animationComplete,e.legendRendering=i.legendRendering,e.annotationRendering=i.annotationRendering,e.itemSelection=i.itemSelection,e.itemHighlight=i.itemHighlight,e.beforePrint=i.beforePrint,e.zoomIn=i.zoomIn,e.zoomOut=i.zoomOut,e.pan=i.pan,e.Annotation=i.Annotation,e.Arrow=i.Arrow,e.Font=i.Font,e.Border=i.Border,e.CenterPosition=i.CenterPosition,e.TooltipSettings=i.TooltipSettings,e.Margin=i.Margin,e.ConnectorLineSettings=i.ConnectorLineSettings,e.MarkerClusterSettings=i.MarkerClusterSettings,e.MarkerClusterData=i.MarkerClusterData,e.ColorMappingSettings=i.ColorMappingSettings,e.InitialShapeSelectionSettings=i.InitialShapeSelectionSettings,e.SelectionSettings=i.SelectionSettings,e.HighlightSettings=i.HighlightSettings,e.NavigationLineSettings=i.NavigationLineSettings,e.BubbleSettings=i.BubbleSettings,e.CommonTitleSettings=i.CommonTitleSettings,e.SubTitleSettings=i.SubTitleSettings,e.TitleSettings=i.TitleSettings,e.ZoomSettings=i.ZoomSettings,e.ToggleLegendSettings=i.ToggleLegendSettings,e.LegendSettings=i.LegendSettings,e.DataLabelSettings=i.DataLabelSettings,e.ShapeSettings=i.ShapeSettings,e.MarkerBase=i.MarkerBase,e.MarkerSettings=i.MarkerSettings,e.LayerSettings=i.LayerSettings,e.Tile=i.Tile,e.MapsAreaSettings=i.MapsAreaSettings,e.Size=i.Size,e.stringToNumber=i.stringToNumber,e.calculateSize=i.calculateSize,e.createSvg=i.createSvg,e.getMousePosition=i.getMousePosition,e.degreesToRadians=i.degreesToRadians,e.radiansToDegrees=i.radiansToDegrees,e.convertGeoToPoint=i.convertGeoToPoint,e.convertTileLatLongToPoint=i.convertTileLatLongToPoint,e.xToCoordinate=i.xToCoordinate,e.yToCoordinate=i.yToCoordinate,e.aitoff=i.aitoff,e.roundTo=i.roundTo,e.sinci=i.sinci,e.acos=i.acos,e.calculateBound=i.calculateBound,e.Point=i.Point,e.MinMax=i.MinMax,e.GeoLocation=i.GeoLocation,e.measureText=i.measureText,e.TextOption=i.TextOption,e.PathOption=i.PathOption,e.ColorValue=i.ColorValue,e.RectOption=i.RectOption,e.CircleOption=i.CircleOption,e.PolygonOption=i.PolygonOption,e.PolylineOption=i.PolylineOption,e.LineOption=i.LineOption,e.Line=i.Line,e.MapLocation=i.MapLocation,e.Rect=i.Rect,e.PatternOptions=i.PatternOptions,e.renderTextElement=i.renderTextElement,e.convertElement=i.convertElement,e.convertElementFromLabel=i.convertElementFromLabel,e.drawSymbols=i.drawSymbols,e.markerColorChoose=i.markerColorChoose,e.markerShapeChoose=i.markerShapeChoose,e.clusterTemplate=i.clusterTemplate,e.mergeSeparateCluster=i.mergeSeparateCluster,e.clusterSeparate=i.clusterSeparate,e.marker=i.marker,e.markerTemplate=i.markerTemplate,e.maintainSelection=i.maintainSelection,e.maintainStyleClass=i.maintainStyleClass,e.appendShape=i.appendShape,e.drawCircle=i.drawCircle,e.drawRectangle=i.drawRectangle,e.drawPath=i.drawPath,e.drawPolygon=i.drawPolygon,e.drawPolyline=i.drawPolyline,e.drawLine=i.drawLine,e.calculateShapes=i.calculateShapes,e.drawDiamond=i.drawDiamond,e.drawTriangle=i.drawTriangle,e.drawCross=i.drawCross,e.drawHorizontalLine=i.drawHorizontalLine,e.drawVerticalLine=i.drawVerticalLine,e.drawStar=i.drawStar,e.drawBalloon=i.drawBalloon,e.drawPattern=i.drawPattern,e.getFieldData=i.getFieldData,e.checkShapeDataFields=i.checkShapeDataFields,e.checkPropertyPath=i.checkPropertyPath,e.filter=i.filter,e.getRatioOfBubble=i.getRatioOfBubble,e.findMidPointOfPolygon=i.findMidPointOfPolygon,e.isCustomPath=i.isCustomPath,e.textTrim=i.textTrim,e.findPosition=i.findPosition,e.removeElement=i.removeElement,e.getTranslate=i.getTranslate,e.getZoomTranslate=i.getZoomTranslate,e.getElementByID=i.getElementByID,e.Internalize=i.Internalize,e.getTemplateFunction=i.getTemplateFunction,e.getElement=i.getElement,e.getShapeData=i.getShapeData,e.triggerShapeEvent=i.triggerShapeEvent,e.getElementsByClassName=i.getElementsByClassName,e.querySelector=i.querySelector,e.getTargetElement=i.getTargetElement,e.createStyle=i.createStyle,e.customizeStyle=i.customizeStyle,e.triggerItemSelectionEvent=i.triggerItemSelectionEvent,e.removeClass=i.removeClass,e.elementAnimate=i.elementAnimate,e.timeout=i.timeout,e.showTooltip=i.showTooltip,e.wordWrap=i.wordWrap,e.createTooltip=i.createTooltip,e.drawSymbol=i.drawSymbol,e.renderLegendShape=i.renderLegendShape,e.getElementOffset=i.getElementOffset,e.changeBorderWidth=i.changeBorderWidth,e.changeNavaigationLineWidth=i.changeNavaigationLineWidth,e.targetTouches=i.targetTouches,e.calculateScale=i.calculateScale,e.getDistance=i.getDistance,e.getTouches=i.getTouches,e.getTouchCenter=i.getTouchCenter,e.sum=i.sum,e.zoomAnimate=i.zoomAnimate,e.animate=i.animate,e.MapAjax=i.MapAjax,e.smoothTranslate=i.smoothTranslate,e.compareZoomFactor=i.compareZoomFactor,e.calculateZoomLevel=i.calculateZoomLevel,e.LayerPanel=i.LayerPanel,e.Bubble=i.Bubble,e.BingMap=i.BingMap,e.Marker=i.Marker,e.ColorMapping=i.ColorMapping,e.DataLabel=i.DataLabel,e.NavigationLine=i.NavigationLine,e.Legend=i.Legend,e.Highlight=i.Highlight,e.Selection=i.Selection,e.MapsTooltip=i.MapsTooltip,e.Zoom=i.Zoom,e.Annotations=i.Annotations,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ej2-angular-maps.umd.min.js.map
