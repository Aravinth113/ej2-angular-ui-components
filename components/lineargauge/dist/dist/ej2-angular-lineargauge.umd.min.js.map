{"version":3,"file":"ej2-angular-lineargauge.umd.min.js","sources":["~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/ranges.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/pointers.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/axes.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/annotations.directive.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.component.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge.module.ts","~/@syncfusion/ej2-angular-lineargauge/src/linear-gauge/lineargauge-all.module.ts"],"sourcesContent":["import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['border', 'color', 'end', 'endWidth', 'offset', 'position', 'start', 'startWidth'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Ranges directive\n * ```html\n * <e-ranges><e-range></e-range></e-ranges>\n * ```\n */\nexport class RangeDirective extends ComplexBase<RangeDirective> {\npublic directivePropList: any;\n/**\n * Specifies the border of axis range.\n */\npublic border: any;\n/**\n * Color of the axis range.\n */\npublic color: any;\n/**\n * End of the axis range.\n * \\@default 0\n */\npublic end: any;\n/**\n * Ending width of axis range.\n * \\@default 10\n */\npublic endWidth: any;\n/**\n * Specifies to move the axis range.\n * \\@default '0'\n */\npublic offset: any;\n/**\n * Specifies to position the axis range.\n * \\@default Outside\n */\npublic position: any;\n/**\n * Start of the axis range.\n * \\@default 0\n */\npublic start: any;\n/**\n * Starting width of axis range.\n * \\@default 10\n */\npublic startWidth: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-ranges>e-range',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RangeDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeDirective.ctorParameters;\n/** @type {?} */\nRangeDirective.prototype.directivePropList;\n/**\n * Specifies the border of axis range.\n * @type {?}\n */\nRangeDirective.prototype.border;\n/**\n * Color of the axis range.\n * @type {?}\n */\nRangeDirective.prototype.color;\n/**\n * End of the axis range.\n * \\@default 0\n * @type {?}\n */\nRangeDirective.prototype.end;\n/**\n * Ending width of axis range.\n * \\@default 10\n * @type {?}\n */\nRangeDirective.prototype.endWidth;\n/**\n * Specifies to move the axis range.\n * \\@default '0'\n * @type {?}\n */\nRangeDirective.prototype.offset;\n/**\n * Specifies to position the axis range.\n * \\@default Outside\n * @type {?}\n */\nRangeDirective.prototype.position;\n/**\n * Start of the axis range.\n * \\@default 0\n * @type {?}\n */\nRangeDirective.prototype.start;\n/**\n * Starting width of axis range.\n * \\@default 10\n * @type {?}\n */\nRangeDirective.prototype.startWidth;\n/** @type {?} */\nRangeDirective.prototype.viewContainerRef;\n}\n\n/**\n * Range Array Directive\n */\nexport class RangesDirective extends ArrayBase<RangesDirective> {\nconstructor() {\n        super('ranges');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes>e-axis>e-ranges',\n    queries: {\n        children: new ContentChildren(RangeDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RangesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nRangesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\n\n\nlet /** @type {?} */ input: string[] = ['animationDuration', 'border', 'color', 'description', 'enableDrag', 'height', 'imageUrl', 'markerType', 'offset', 'opacity', 'placement', 'position', 'roundedCornerRadius', 'type', 'value', 'width'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Pointers directive\n * ```html\n * <e-pointers><e-pointer></e-pointer></e-pointers>\n * ```\n */\nexport class PointerDirective extends ComplexBase<PointerDirective> {\npublic directivePropList: any;\n/**\n * Specifies the type of pointer.\n * \\@default Marker\n */\npublic type: any;\n/**\n * Specifies the animating duration of pointer in milliseconds.\n * \\@default 0\n */\npublic animationDuration: any;\n/**\n * Specifies the border of pointer.\n */\npublic border: any;\n/**\n * Specifies the color of the pointer.\n */\npublic color: any;\n/**\n * Description of the pointer.\n * \\@default null\n */\npublic description: any;\n/**\n * Specifies the enable or disable the pointer drag.\n * \\@default false\n */\npublic enableDrag: any;\n/**\n * Specifies the height of pointer.\n * \\@default 20\n */\npublic height: any;\n/**\n * Specifies the path of image.\n * \\@default null\n */\npublic imageUrl: any;\n/**\n * Specifies the marker shape in pointer.\n * \\@default InvertedTriangle\n */\npublic markerType: any;\n/**\n * Specifies to move the pointer.\n * \\@default '0'\n */\npublic offset: any;\n/**\n * Specifies the opacity for pointer.\n * \\@default 1\n */\npublic opacity: any;\n/**\n * Specifies the place of the pointer.\n * \\@default Far\n */\npublic placement: any;\n/**\n * Specifies to position the pointer.\n * \\@default Auto\n */\npublic position: any;\n/**\n * Specifies the corner radius for rounded rectangle.\n * \\@default 10\n */\npublic roundedCornerRadius: any;\n/**\n * Specifies value of the pointer.\n * \\@blazordefaultvalue 0\n * \\@default null\n */\npublic value: any;\n/**\n * Specifies the width of pointer.\n * \\@default 20\n */\npublic width: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-pointers>e-pointer',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction PointerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointerDirective.ctorParameters;\n/** @type {?} */\nPointerDirective.prototype.directivePropList;\n/**\n * Specifies the type of pointer.\n * \\@default Marker\n * @type {?}\n */\nPointerDirective.prototype.type;\n/**\n * Specifies the animating duration of pointer in milliseconds.\n * \\@default 0\n * @type {?}\n */\nPointerDirective.prototype.animationDuration;\n/**\n * Specifies the border of pointer.\n * @type {?}\n */\nPointerDirective.prototype.border;\n/**\n * Specifies the color of the pointer.\n * @type {?}\n */\nPointerDirective.prototype.color;\n/**\n * Description of the pointer.\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.description;\n/**\n * Specifies the enable or disable the pointer drag.\n * \\@default false\n * @type {?}\n */\nPointerDirective.prototype.enableDrag;\n/**\n * Specifies the height of pointer.\n * \\@default 20\n * @type {?}\n */\nPointerDirective.prototype.height;\n/**\n * Specifies the path of image.\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.imageUrl;\n/**\n * Specifies the marker shape in pointer.\n * \\@default InvertedTriangle\n * @type {?}\n */\nPointerDirective.prototype.markerType;\n/**\n * Specifies to move the pointer.\n * \\@default '0'\n * @type {?}\n */\nPointerDirective.prototype.offset;\n/**\n * Specifies the opacity for pointer.\n * \\@default 1\n * @type {?}\n */\nPointerDirective.prototype.opacity;\n/**\n * Specifies the place of the pointer.\n * \\@default Far\n * @type {?}\n */\nPointerDirective.prototype.placement;\n/**\n * Specifies to position the pointer.\n * \\@default Auto\n * @type {?}\n */\nPointerDirective.prototype.position;\n/**\n * Specifies the corner radius for rounded rectangle.\n * \\@default 10\n * @type {?}\n */\nPointerDirective.prototype.roundedCornerRadius;\n/**\n * Specifies value of the pointer.\n * \\@blazordefaultvalue 0\n * \\@default null\n * @type {?}\n */\nPointerDirective.prototype.value;\n/**\n * Specifies the width of pointer.\n * \\@default 20\n * @type {?}\n */\nPointerDirective.prototype.width;\n/** @type {?} */\nPointerDirective.prototype.viewContainerRef;\n}\n\n/**\n * Pointer Array Directive\n */\nexport class PointersDirective extends ArrayBase<PointersDirective> {\nconstructor() {\n        super('pointers');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-axes>e-axis>e-pointers',\n    queries: {\n        children: new ContentChildren(PointerDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PointersDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPointersDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPointersDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\n\nimport { RangesDirective } from './ranges.directive';\nimport { PointersDirective } from './pointers.directive';\n\nlet /** @type {?} */ input: string[] = ['isInversed', 'labelStyle', 'line', 'majorTicks', 'maximum', 'minimum', 'minorTicks', 'opposedPosition', 'pointers', 'ranges', 'showLastLabel'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Axes directive\n * ```html\n * <e-axes><e-axis></e-axis></e-axes>\n * ```\n */\nexport class AxisDirective extends ComplexBase<AxisDirective> {\npublic directivePropList: any;\npublic childRanges: any;\npublic childPointers: any;\npublic tags: string[] = ['ranges', 'pointers'];\n/**\n * Specifies the axis rendering direction.\n */\npublic isInversed: any;\n/**\n * Options for customizing the axis label appearance.\n */\npublic labelStyle: any;\n/**\n * Options for customizing the axis line.\n */\npublic line: any;\n/**\n * Options for customizing the major tick lines.\n */\npublic majorTicks: any;\n/**\n * Specifies the maximum value of an axis.\n * \\@default 100\n */\npublic maximum: any;\n/**\n * Specifies the minimum value of an axis.\n * \\@default 0\n */\npublic minimum: any;\n/**\n * Options for customizing the minor tick lines.\n */\npublic minorTicks: any;\n/**\n * Specifies the axis rendering position.\n */\npublic opposedPosition: any;\n/**\n * Options for customizing the pointers of an axis\n */\npublic pointers: any;\n/**\n * Options for customizing the ranges of an axis\n */\npublic ranges: any;\n/**\n * Specifies the last label to be shown\n */\npublic showLastLabel: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-axes>e-axis',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n        childRanges: new ContentChild(RangesDirective), \n        childPointers: new ContentChild(PointersDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction AxisDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxisDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxisDirective.ctorParameters;\n/** @type {?} */\nAxisDirective.prototype.directivePropList;\n/** @type {?} */\nAxisDirective.prototype.childRanges;\n/** @type {?} */\nAxisDirective.prototype.childPointers;\n/** @type {?} */\nAxisDirective.prototype.tags;\n/**\n * Specifies the axis rendering direction.\n * @type {?}\n */\nAxisDirective.prototype.isInversed;\n/**\n * Options for customizing the axis label appearance.\n * @type {?}\n */\nAxisDirective.prototype.labelStyle;\n/**\n * Options for customizing the axis line.\n * @type {?}\n */\nAxisDirective.prototype.line;\n/**\n * Options for customizing the major tick lines.\n * @type {?}\n */\nAxisDirective.prototype.majorTicks;\n/**\n * Specifies the maximum value of an axis.\n * \\@default 100\n * @type {?}\n */\nAxisDirective.prototype.maximum;\n/**\n * Specifies the minimum value of an axis.\n * \\@default 0\n * @type {?}\n */\nAxisDirective.prototype.minimum;\n/**\n * Options for customizing the minor tick lines.\n * @type {?}\n */\nAxisDirective.prototype.minorTicks;\n/**\n * Specifies the axis rendering position.\n * @type {?}\n */\nAxisDirective.prototype.opposedPosition;\n/**\n * Options for customizing the pointers of an axis\n * @type {?}\n */\nAxisDirective.prototype.pointers;\n/**\n * Options for customizing the ranges of an axis\n * @type {?}\n */\nAxisDirective.prototype.ranges;\n/**\n * Specifies the last label to be shown\n * @type {?}\n */\nAxisDirective.prototype.showLastLabel;\n/** @type {?} */\nAxisDirective.prototype.viewContainerRef;\n}\n\n/**\n * Axis Array Directive\n */\nexport class AxesDirective extends ArrayBase<AxesDirective> {\nconstructor() {\n        super('axes');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-lineargauge>e-axes',\n    queries: {\n        children: new ContentChildren(AxisDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AxesDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAxesDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAxesDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ViewContainerRef, ContentChildren, ContentChild } from '@angular/core';\nimport { ComplexBase, ArrayBase, setValue } from '@syncfusion/ej2-angular-base';\nimport { Template } from '@syncfusion/ej2-angular-base';\n\n\nlet /** @type {?} */ input: string[] = ['axisIndex', 'axisValue', 'content', 'font', 'horizontalAlignment', 'verticalAlignment', 'x', 'y', 'zIndex'];\nlet /** @type {?} */ outputs: string[] = [];\n/**\n * Annotation directive\n * ```html\n * <e-annotations><e-annotation></e-annotation></e-annotations>\n * ```\n */\nexport class AnnotationDirective extends ComplexBase<AnnotationDirective> {\npublic directivePropList: any;\n/**\n * Specifies the index of axis.\n * \\@aspdefaultvalueignore\n */\npublic axisIndex: any;\n/**\n * Specifies the value of axis.\n * \\@aspdefaultvalueignore\n * \\@blazordefaultvalue null\n */\npublic axisValue: any;\n/**\n * The font of the axis labels.\n */\npublic font: any;\n/**\n * Specifies the horizontal alignment of annotation.\n * \\@default None\n */\npublic horizontalAlignment: any;\n/**\n * Specifies the vertical alignment of annotation.\n * \\@default None\n */\npublic verticalAlignment: any;\n/**\n * Specifies the position of x.\n */\npublic x: any;\n/**\n * Specifies the position of y.\n */\npublic y: any;\n/**\n * Specifies the zIndex of the annotation.\n * \\@default '-1'\n */\npublic zIndex: any;\n/**\n * Specifies the id of html element.\n */\n@Template()\n    public content: any;\n/**\n * @param {?} viewContainerRef\n */\nconstructor(private viewContainerRef:ViewContainerRef) {\n        super();\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.registerEvents(outputs);\n        this.directivePropList = input;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'e-annotations>e-annotation',\n    inputs: input,\n    outputs: outputs,    \n    queries: {\n\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'content': [{ type: ContentChild, args: ['content', ] },],\n};\n}\n\nfunction AnnotationDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationDirective.ctorParameters;\n/** @type {?} */\nAnnotationDirective.propDecorators;\n/** @type {?} */\nAnnotationDirective.prototype.directivePropList;\n/**\n * Specifies the index of axis.\n * \\@aspdefaultvalueignore\n * @type {?}\n */\nAnnotationDirective.prototype.axisIndex;\n/**\n * Specifies the value of axis.\n * \\@aspdefaultvalueignore\n * \\@blazordefaultvalue null\n * @type {?}\n */\nAnnotationDirective.prototype.axisValue;\n/**\n * The font of the axis labels.\n * @type {?}\n */\nAnnotationDirective.prototype.font;\n/**\n * Specifies the horizontal alignment of annotation.\n * \\@default None\n * @type {?}\n */\nAnnotationDirective.prototype.horizontalAlignment;\n/**\n * Specifies the vertical alignment of annotation.\n * \\@default None\n * @type {?}\n */\nAnnotationDirective.prototype.verticalAlignment;\n/**\n * Specifies the position of x.\n * @type {?}\n */\nAnnotationDirective.prototype.x;\n/**\n * Specifies the position of y.\n * @type {?}\n */\nAnnotationDirective.prototype.y;\n/**\n * Specifies the zIndex of the annotation.\n * \\@default '-1'\n * @type {?}\n */\nAnnotationDirective.prototype.zIndex;\n/**\n * Specifies the id of html element.\n * @type {?}\n */\nAnnotationDirective.prototype.content;\n/** @type {?} */\nAnnotationDirective.prototype.viewContainerRef;\n}\n\n/**\n * Annotation Array Directive\n */\nexport class AnnotationsDirective extends ArrayBase<AnnotationsDirective> {\nconstructor() {\n        super('annotations');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'ej-linear-gauge>e-annotations',\n    queries: {\n        children: new ContentChildren(AnnotationDirective)\n    },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AnnotationsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nAnnotationsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAnnotationsDirective.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, ViewContainerRef, ChangeDetectionStrategy, QueryList, Renderer2, Injector, ValueProvider, ContentChild } from '@angular/core';\nimport { ComponentBase, IComponentBase, applyMixins, ComponentMixins, PropertyCollectionInfo, setValue } from '@syncfusion/ej2-angular-base';\nimport { LinearGauge } from '@syncfusion/ej2-lineargauge';\nimport { Template } from '@syncfusion/ej2-angular-base';\nimport { AxesDirective } from './axes.directive';\nimport { AnnotationsDirective } from './annotations.directive';\n\nexport const /** @type {?} */ inputs: string[] = ['annotations','axes','background','border','container','description','enablePersistence','enableRtl','format','height','locale','margin','orientation','rangePalettes','tabIndex','theme','title','titleStyle','tooltip','useGroupingSeparator','width'];\nexport const /** @type {?} */ outputs: string[] = ['animationComplete','annotationRender','axisLabelRender','beforePrint','gaugeMouseDown','gaugeMouseLeave','gaugeMouseMove','gaugeMouseUp','load','loaded','resized','tooltipRender','valueChange'];\nexport const /** @type {?} */ twoWays: string[] = [''];\n/**\n * Linear Gauge Component\n * ```html\n * <ej-lineargauge></ej-lineargauge>\n * ```\n */\n@ComponentMixins([ComponentBase])\nexport class LinearGaugeComponent extends LinearGauge implements IComponentBase {\npublic context : any;\npublic tagObjects: any;\npublic childAxes: QueryList<AxesDirective>;\npublic childAnnotations: QueryList<AnnotationsDirective>;\npublic tags: string[] = ['axes', 'annotations'];\n\n    \n    @Template()\npublic tooltip_template: any;\n/**\n * @param {?} ngEle\n * @param {?} srenderer\n * @param {?} viewContainerRef\n * @param {?} injector\n */\nconstructor(private ngEle: ElementRef,\nprivate srenderer: Renderer2,\nprivate viewContainerRef:ViewContainerRef,\nprivate injector: Injector) {\n        super();\n        this.element = this.ngEle.nativeElement;\n        this.injectedModules = this.injectedModules || [];\n        try {\n                let mod = this.injector.get('LinearGaugeGaugeTooltip');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n        try {\n                let mod = this.injector.get('LinearGaugeAnnotations');\n                if(this.injectedModules.indexOf(mod) === -1) {\n                    this.injectedModules.push(mod)\n                }\n            } catch { }\n\n        this.registerEvents(outputs);\n        this.addTwoWay.call(this, twoWays);\n        setValue('currentInstance', this, this.viewContainerRef);\n        this.context  = new ComponentBase();\n    }\n/**\n * @return {?}\n */\npublic ngOnInit() {\n        this.context.ngOnInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterViewInit(): void {\n        this.context.ngAfterViewInit(this);\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.context.ngOnDestroy(this);\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        this.tagObjects[0].instance = this.childAxes;\n        if (this.childAnnotations) {\n                    this.tagObjects[1].instance = ( /** @type {?} */((this.childAnnotations as any))).list[0].childAxes;\n                    for (var /** @type {?} */ d = 0; d < ( /** @type {?} */((this.childAnnotations as any))).list.length; d++) {\n                        if (( /** @type {?} */((this.childAnnotations as any))).list[d + 1]) {\n                            this.tagObjects[1].instance.list.push(( /** @type {?} */((this.childAnnotations as any))).list[d+1].childAxes.list[0]);\n                        }\n                    }\n                }\n        this.context.ngAfterContentChecked(this);\n    }\npublic registerEvents: (eventList: string[]) => void;\npublic addTwoWay: (propList: string[]) => void;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ejs-lineargauge',\n    inputs: inputs,\n    outputs: outputs,\n    template: '',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    queries: {\n        childAxes: new ContentChild(AxesDirective), \n        childAnnotations: new ContentChild(AnnotationsDirective)\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ViewContainerRef, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tooltip_template': [{ type: ContentChild, args: ['tooltipTemplate', ] },],\n};\n}\n\nfunction LinearGaugeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeComponent.ctorParameters;\n/** @type {?} */\nLinearGaugeComponent.propDecorators;\n/** @type {?} */\nLinearGaugeComponent.prototype.context;\n/** @type {?} */\nLinearGaugeComponent.prototype.tagObjects;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAxes;\n/** @type {?} */\nLinearGaugeComponent.prototype.childAnnotations;\n/** @type {?} */\nLinearGaugeComponent.prototype.tags;\n/** @type {?} */\nLinearGaugeComponent.prototype.tooltip_template;\n/** @type {?} */\nLinearGaugeComponent.prototype.registerEvents;\n/** @type {?} */\nLinearGaugeComponent.prototype.addTwoWay;\n/** @type {?} */\nLinearGaugeComponent.prototype.ngEle;\n/** @type {?} */\nLinearGaugeComponent.prototype.srenderer;\n/** @type {?} */\nLinearGaugeComponent.prototype.viewContainerRef;\n/** @type {?} */\nLinearGaugeComponent.prototype.injector;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\n/**\n * NgModule definition for the LinearGauge component.\n */\nexport class LinearGaugeModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ],\n    exports: [\n        LinearGaugeComponent,\n        RangeDirective,\n        RangesDirective,\n        PointerDirective,\n        PointersDirective,\n        AxisDirective,\n        AxesDirective,\n        AnnotationDirective,\n        AnnotationsDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule, ValueProvider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeDirective, RangesDirective } from './ranges.directive';\nimport { PointerDirective, PointersDirective } from './pointers.directive';\nimport { AxisDirective, AxesDirective } from './axes.directive';\nimport { AnnotationDirective, AnnotationsDirective } from './annotations.directive';\nimport { LinearGaugeComponent } from './lineargauge.component';\nimport { LinearGaugeModule } from './lineargauge.module';\nimport {GaugeTooltip, Annotations} from '@syncfusion/ej2-lineargauge';\n\n\nexport const /** @type {?} */ GaugeTooltipService: ValueProvider = { provide: 'LinearGaugeGaugeTooltip', useValue: GaugeTooltip};\nexport const /** @type {?} */ AnnotationsService: ValueProvider = { provide: 'LinearGaugeAnnotations', useValue: Annotations};\n/**\n * NgModule definition for the LinearGauge component with providers.\n */\nexport class LinearGaugeAllModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, LinearGaugeModule],\n    exports: [\n        LinearGaugeModule\n    ],\n    providers:[\n        GaugeTooltipService,\n        AnnotationsService\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LinearGaugeAllModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLinearGaugeAllModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLinearGaugeAllModule.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["input","outputs","RangeDirective","_super","viewContainerRef","_this","call","this","setValue","registerEvents","directivePropList","__extends","ComplexBase","decorators","type","Directive","args","selector","inputs","queries","ctorParameters","ViewContainerRef","RangesDirective","ArrayBase","children","ContentChildren","PointerDirective","PointersDirective","AxisDirective","tags","childRanges","ContentChild","childPointers","AxesDirective","AnnotationDirective","propDecorators","content","__decorate","Template","prototype","AnnotationsDirective","twoWays","exports","LinearGaugeComponent","ngEle","srenderer","injector","element","nativeElement","injectedModules","mod","get","indexOf","push","_a","_b","addTwoWay","context","ComponentBase","ngOnInit","ngAfterViewInit","ngOnDestroy","ngAfterContentChecked","tagObjects","instance","childAxes","childAnnotations","list","d","length","LinearGauge","Component","template","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","Renderer2","Injector","tooltip_template","ComponentMixins","__metadata","LinearGaugeModule","NgModule","imports","CommonModule","declarations","GaugeTooltipService","provide","useValue","GaugeTooltip","AnnotationsService","Annotations","LinearGaugeAllModule","providers"],"mappings":"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"}
